GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 1
SAGD Optimization - MILNP Algorithm
C o m p i l a t i o n


              This is the main file for the SAGD Water Treatment Optimization using the
              MILNP Optimization.
   6   
   7   
   8  *INITIALIZE SETS, DATA, and VARIABLE
   9   
INCLUDE    C:\Users\NIME\Documents\water_treatment\sets_init.gms
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 2
sets_init
C o m p i l a t i o n


  12   
  13  *SUPERSETS
  14   
  15  sets
  16   
  17          tu              'treatment unit'
  18                  / st    skim tank
  19                    igf   induced gas flotation
  20                    orf   oil removal filter
  21                    hcy   hydro-cyclone
  22                    ls    warm-hot lime softener
  23                    evap  evaporator
  24                    wac   weak acid cation exchanger
  25                  /
  26   
  27          c               'contaminant'
  28                  / o     oil
  29                    s     silica
  30                    th    total hardness
  31                    tss   total suspended solids
  32                  /
  33   
  34          s               'water source'
  35                  / pw    produced water
  36                    muw   make-up water
  37                    bbd   boiler blowdown
  38                  /
  39   
  40          cs      'steam generation cases'
  41                  /1*4/ ;
  42   
  43  alias(tu,tup);
  44   
  45   
  46   
  47   
INCLUDE    C:\Users\NIME\Documents\water_treatment\params_init.gms
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 3
params_init
C o m p i l a t i o n


  50   
       
      The parameters for flow rates, concentrations, mass loads, cost, and others are
      initialized in this script.
       
      ***PARAMETERS ARE FOR CASE 2 ONLY FOR NOW***
      ***NEED TO FIND INFO FOR F_loss(tu), C_in_max(tu,c), C_loss(tu,c), and ALL cost parameters
  59   
  60  *FLOW RATES-------------------------------------------------------------------------------
  61   
  62  scalar F_BFW    'boiler feed water flow'
  63          /                       625 /;
  64   
      parameter F_s(s) 'flow of stream s'
              /         pw    475
                        bbd   0
                              /;
      F_s('muw') = F_BFW - F_s('pw') - F_s('bbd');
  72   
  73   
  74  parameter F_loss(tu)    'flow loss in tu'
  75          /         st    0
  76                    igf   0
  77                    orf   0
  78                    hcy   0
  79                    ls    0
  80                    evap  0
  81                    wac   0       /;
  82   
  83  *CONCENTRATIONS---------------------------------------------------------------------------
  84  *did not include C(s,tu,c) and C_ave(c) - they were not used in the equations
  85   
  86  table C_c_s(s,c)        'concentration of c in s'
  87                     o         s       th      tss
  88            pw       2000     350     20       50
  89            muw      0        15      245      0
  90            bbd      10       150     1        1       ;
  91  **pw and muw data collected from Forshomi thesis Table 3-1
  92  **muw is assumed to be fresh no brackish
  93  **bbd data collected from Forshomi appendix A Table A3 for OTSG
  94   
  95  table C_in_max(tu,c)    'maximum allowable inlet concentration of c in tu'
  96                  o               s               th              tss
  97  st              2500            400             400             100
  98  igf             2500            400             400             100
  99  orf             2500            400             400             100
 100  hcy             2500            400             400             100
 101  ls              2500            400             400             100
 102  evap            2500            400             400             100
 103  wac             2500            400             400             100     ;
 104   
 105  table C_loss(tu,c)      'concentration loss of c in tu'
 106                  o               s               th              tss
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 4
params_init
C o m p i l a t i o n


 107  st              0               0               0               0
 108  igf             0               0               0               0
 109  orf             0               0               0               0
 110  hcy             0               0               0               0
 111  ls              0               0               0               0
 112  evap            0               0               0               0
 113  wac             0               0               0               0       ;
 114   
 115  parameter C_target(c)   'target concentration required at discharge'
 116          /       o               10
 117                  s               150
 118                  th              1
 119                  tss             1       /;
 120   
 121  *MASS LOADS-------------------------------------------------------------------------------
 122  *did not include ML_tot(c) - it was not used in the equations
 123   
      parameter ML_rem_c(c)   'mass load of contaminant to be removed from the system';
              ML_rem_c(c) = sum( s, F_s(s) * (C_c_s(s,c) - C_target(c)) );
      ** E17 - double check this formula, there might be problems with brackets**
 129   
 130  *COST PARAMETERS--------------------------------------------------------------------------
 131   
 132  parameter cost_var_s(s) 'variable cost of s'
 133          /       pw              0
 134                  muw             1.59
 135                  bbd             0       /;
 136   
 137  parameter cost_fix_s(s) 'fixed cost of s'
 138          /       pw              0
 139                  muw             0
 140                  bbd             0       /;
 141   
 142  parameter cost_var_tu_a(tu)       'variable cost of tu'
 143                  /  st              109.26
 144                     igf             432.94
 145                     orf             0
 146                     hcy             1
 147                     ls              5388
 148                     evap            15529
 149                     wac             494.23       /;
 150   
 151  parameter cost_var_tu_b(tu)       'variable cost of tu'
 152                  /  st              0
 153                     igf             23585
 154                     orf             0
 155                     hcy             1
 156                     ls              -479602
 157                     evap            10626
 158                     wac             -31.142       /;
 159   
 160   
 161  parameter cost_fix_tu_a(tu)     'fixed cost of tu - function slope'
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 5
params_init
C o m p i l a t i o n


 162             /       st              2989.5
 163                     igf             1906.7
 164                     orf             1248.9
 165                     hcy             3000
 166                     ls              9705.5
 167                     evap            28723
 168                     wac             1550.9       /;
 169   
 170   
 171  parameter cost_fix_tu_b(tu)     'fixed cost of tu - function intercept'
 172             /       st              0
 173                     igf             12292
 174                     orf             -401.99
 175                     hcy             50000
 176                     ls              -860733
 177                     evap            12926
 178                     wac             -317.74       /;
 179   
 180  *OTHER PARAMETERS-------------------------------------------------------------------------
 181   
 182  table RR(tu,c)  'removal ratio of contaminant c'
 183                             o       s       th      tss
 184             st              0.9     0       0       0.5
 185             igf             0.9     0       0       0.7
 186             orf             0.91    0       0       0.95
 187             hcy             0.93    0       0       0
 188             ls              0       0.9     0.5     0
 189             evap            0.99    0.99    0.99    0.99
 190             wac             0       0       0.99    0       ;
 191   
 192  scalar Bound_up 'upper bound for stream flow rates';
 193          Bound_up = F_BFW + sum(tu, F_loss(tu));
 194  *EQN 20
 195  Display Bound_up ;
 196  scalar Bound_low        'lower bound for stream flow rates'
 197          /20/;
 198  *arbitrary values - model values not given by Forshomi
 199   
 200  parameter NS_max(tu)    'maximum number of streams that can go through tu'
 201          /         st    5
 202                    igf   5
 203                    orf   5
 204                    hcy   5
 205                    ls    5
 206                    evap  5
 207                    wac   5      /;
 208  *arbitrary values - model values not given by Forshomi
 209   
 210  scalar HY       'number of operational hours per year'
 211          /8322/;
 212  **assuming 95% on-stream time
 213   
 214   
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 6
params_init
C o m p i l a t i o n


 215   
 216   
 217   
 218   
 219   
 220   
 221   
 222   
 223   
 224   
 225   
 226   
INCLUDE    C:\Users\NIME\Documents\water_treatment\vars_init.gms
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 7
vars_init
C o m p i l a t i o n


 229   
       
      The variables for flow rates, concentrations, mass loads, cost, and others are
      initialized in this script.
       
 236   
 237  *FLOW RATES
 238   
 239  positive variables
 240          F_s(s)                  'flow rate of source water'
 241          F_s_tu(s,tu)    'flow rate of s entering tu'
 242          F_rec(tup,tu)   'flow rate of streams exiting tu that enter tup for recycle'
 243          F_exit(tu)              'flow rate of streams leaving tu to the discharge point'
 244          F_in(tu)                'flow rate of streams entering tu'
 245          F_out(tu)               'flow rate of streams directly exiting tu'      ;
 246   
 247  F_s.fx('pw') = 475 ;
 248  F_s.fx('bbd') = 0 ;
 249   
 250  F_rec.fx('st','st') = 0;
 251  F_rec.fx('igf','igf') = 0;
 252  F_rec.fx('orf','orf') = 0;
 253  F_rec.fx('hcy','hcy') = 0;
 254  F_rec.fx('ls','ls') = 0;
 255  F_rec.fx('evap','evap') = 0;
 256  F_rec.fx('wac','wac') = 0;
 257  *CONCENTRATIONS
 258   
 259  positive variables
 260          C_in(tu,c)              'concentration of c in tu inlet'
 261          C_rout(tu,tup,c)        'concentration of c exiting tu and entering tup for recycle'
 262          C_exit(tu,c)    'concentration of c leaving tu to the discharge point'
 263          C_out(tu,c)             'concentration of stream directly exiting tu'
 264          C_BFW(c)                'concentration of c in BFW'     ;
 265   
 266  C_in.up(tu,'o') = 2000;
 267  C_in.up(tu,'s') = 350;
 268  C_in.up(tu,'th') = 245;
 269  C_in.up(tu,'tss') = 50;
 270   
 271  C_rout.up(tu,tup,'o') = 2000;
 272  C_rout.up(tu,tup,'s') = 350;
 273  C_rout.up(tu,tup,'th') = 245;
 274  C_rout.up(tu,tup,'tss') = 50;
 275   
 276  C_exit.up(tu,'o') = 2000;
 277  C_exit.up(tu,'s') = 350;
 278  C_exit.up(tu,'th') = 245;
 279  C_exit.up(tu,'tss') = 50;
 280   
 281  C_out.up(tu,'o') = 2000;
 282  C_out.up(tu,'s') = 350;
 283  C_out.up(tu,'th') = 245;
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 8
vars_init
C o m p i l a t i o n


 284  C_out.up(tu,'tss') = 50;
 285   
 286  C_BFW.up('o') = 2000;
 287  C_BFW.up('s') = 350;
 288  C_BFW.up('th') = 245;
 289  C_BFW.up('tss') = 50;
 290   
 291   
 292  *MASS LOADS
 293   
 294  positive variables
 295          ML_rem_tu_c(tu,c)       'mass load of c removed from tu'
 296          ML_in(tu,c)             'mass load of c entering tu'
 297          ML_out(tu,c)    'mass load of c exiting tu'
 298          ML_rem_c(c)             'mass load of c removed from system'    ;
 299   
 300  *COST AND ENERGY VARIABLES
 301   
 302  positive variables
 303          Cost_tot_tu(tu) 'total cost of tu'
 304          Cost_op                 'operating cost of the system'
 305          Cost_cap                'capital cost of the system'
 306          Cost_tot                'total capital cost of the system'
 307          energy_var(tu)  'energy consumption of tu'
 308          energy_tot              'total energy consumption of the system' ;
 309   
 310  *BINARY VARIABLES
 311   
 312  binary variables
 313          B_s_tu(s,tu)    'binary variable to show the existence of stream s into tu'
 314          B_tu_tup(tu,tup)        'binary variable to show the existence of tu into tup recylce'
 315          B_exit(tu)              'binary variable to show the existence of stream from tu to discharge'
 316          B_tu(tu)                'binary variable to show the existence of tu' ;
 317   
 318  *OBJECT
 319   
 320  variable
 321          obj                             'objective variable' ;
 322   
 323   
 324  *EQUATIONS
 325   
INCLUDE    C:\Users\NIME\Documents\water_treatment\minlp_eqns.gms
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                         10/25/17 13:45:22 Page 9
minlp_eqns
C o m p i l a t i o n


 328   
       
      The equations for the MINLP algorithm are provided in this file
       
 334   
 335   
 336  *ML of C to be Removed from System
 337  equation eq17(c); eq17(c) .. ML_rem_c(c) =e= sum( s, F_s(s) * (C_c_s(s,c) - C_target(c)) );
 338   
 339  *Overall Mass Balance
 340  equation eq4; eq4 .. sum(s, F_s(s)) - F_BFW =e= sum(tu, F_loss(tu)) ;
 341   
 342  *Splitter 1 Mass Balance
 343  equation eq5(s); eq5(s) .. F_s(s) =e= sum(tu, F_s_tu(s,tu)) ;
 344   
 345  *Limiting Flow from S to TU
 346  equation eq21(s,tu); eq21(s,tu) .. F_s_tu(s,tu) - B_s_tu(s,tu) * Bound_up =l= 0 ;
 347  equation eq25(s,tu); eq25(s,tu) .. F_s_tu(s,tu) - B_s_tu(s,tu) * Bound_low =g= 0 ;
 348   
 349  *Mixer 1 Mass Balance
 350  equation eq6(tu); eq6(tu) .. sum(s, F_s_tu(s,tu)) + sum(tup, F_rec(tup,tu))  =e= F_in(tu) ;
 351   
 352   
 353  *Limiting TU Inlet Flow
 354  equation eq24(tu); eq24(tu) .. F_in(tu) - B_tu(tu) * Bound_up * 2 =l= 0 ;
 355  equation eq28(tu); eq28(tu) .. F_in(tu) - B_tu(tu) * Bound_low =g= 0 ;
 356   
 357  *TU Mass Balance
 358  equation eq9(tu); eq9(tu) .. F_in(tu) - F_out(tu) =e= F_loss(tu) ;
 359   
 360  *TU Component Mass Balance
 361  equation eq12(tu,c); eq12(tu,c) .. sum(tup, F_rec(tup,tu) * C_out(tup,c)) + sum(s, F_s_tu(s,tu) * C_c_s(s,c)) =e= ML_in(tu,c) ;
 362  equation eq13(tu,c); eq13(tu,c) .. C_out(tu,c) * ( sum(tup, F_rec(tu,tup)) + F_exit(tu) ) =e= ML_out(tu,c) ;
 363  equation eq10(tu,c); eq10(tu,c) .. (1 - RR(tu,c)) * ML_in(tu,c) - ML_out(tu,c) - F_loss(tu) * C_loss(tu,c) =e= 0 ;
 364  *equation eq11(tu,c); eq11(tu,c) .. ML_in(tu,c) - ML_out(tu,c) - ML_rem_tu_c(tu,c) =e= F_loss(tu) * C_loss(tu,c) ;
 365   
 366  *Concentration Limit for TUs
 367  equation eq14(tu,c); eq14(tu,c) .. ML_in(tu,c) =l= C_in_max(tu,c) * F_in(tu);
 368   
 369  *Splitter 2 Mass Balance - Recycle
 370  equation eq7(tu); eq7(tu) .. F_out(tu) =e= sum(tup, F_rec(tu,tup)) + F_exit(tu) ;
 371   
 372  *Eliminiating Repeated Recycle
 373  equation eq19(tu,tup); eq19(tu,tup)$(ord(tup) ne ord(tu)) .. B_tu_tup(tu,tup) + B_tu_tup(tup,tu) =l= 1 ;
 374   
 375  *Limiting Maximum Number of Strems in TU
 376  equation eq29(tu); eq29(tu) .. sum(s, B_s_tu(s,tu)) + sum( tup, B_tu_tup(tu,tup)) =l= NS_max(tu) ;
 377   
 378  *Limiting Flow from Recycles
 379  equation eq22(tu,tup); eq22(tu,tup) .. F_rec(tu,tup) - B_tu_tup(tu,tup) * Bound_up =l= 0 ;
 380  equation eq26(tu,tup); eq26(tu,tup) .. F_rec(tu,tup) - B_tu_tup(tu,tup) * Bound_low =g= 0 ;
 381   
 382  *Mixer 3 Mass Balance
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 10
minlp_eqns
C o m p i l a t i o n


 383  equation eq8; eq8 .. sum(tu, F_exit(tu)) =e= F_BFW ;
 384   
 385  *Mixer 3 Component Mass Balance
 386  equation eqX(c); eqX(c) .. sum(tu, F_exit(tu) * C_out(tu,c)) =e= C_BFW(c) * F_BFW ;
 387   
 388  *Limiting TU Exit Flow
 389  equation eq23(tu); eq23(tu) .. F_exit(tu) - B_exit(tu) * Bound_up =l= 0 ;
 390  equation eq27(tu); eq27(tu) .. F_exit(tu) - B_exit(tu) * Bound_low =g= 0 ;
 391   
 392   
 393   
 394  *BFW Concentration Requirements
 395  equation eq15(c); eq15(c) .. C_BFW(c) * F_BFW =l= C_target(c) * sum(tu, F_exit(tu)) ;
 396   
 397   
 398   
 399  *Constraint to Ensure ML of C is Removed from the System
 400  *equation eq16(c); eq16(c) .. ML_rem_c(c) =l= sum(tu, RR(tu,c) * ML_in(tu,c)) ;
 401   
 402  *Cost / Energy of TUs
 403  equation eq18(tu); eq18(tu) .. Cost_tot_tu(tu) =e= Cost_var_tu_a(tu) * F_in(tu) + Cost_var_tu_b(tu) * B_tu(tu) + cost_fix_tu_a(tu) * F_in(tu) + cost_fix_tu_b(tu) * B_tu(tu);
 404   
 405  *Cost / Energy of System
 406  equation eq2; eq2 .. Cost_tot =e= sum(tu, Cost_tot_tu(tu)) + HY * sum(s, F_s(s) * cost_var_s(s)) ;
 407   
 408  *Objective Equation
 409  equation objective; objective .. obj =e= Cost_tot ;
 410   
 411   
 412   
 413   
 414   
 415   
 416   
 417   
 418   
 419   
 420   
 421   
 422   
 423  *SOLVE MINLP
 424   
 425  model water /all/ ;
 426   
 427  option minlp=baron;
 428  option nlp=baron;
 429  option optcr = 0.01;
 430  option reslim = 86400;
 431   
 432  Solve  water using minlp minimization obj ;
 433   
 434   
 438   
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 11
minlp_eqns
C o m p i l a t i o n


 439  execute_unload 'minlp_main.gdx'
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 12
minlp_eqns
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\NIME\Documents\water_treatment\minlp_main.gms
     2       10 INCLUDE        1      10  .C:\Users\NIME\Documents\water_treatment\sets_init.gms
     3       48 INCLUDE        1      11  .C:\Users\NIME\Documents\water_treatment\params_init.gms
     4      227 INCLUDE        1      12  .C:\Users\NIME\Documents\water_treatment\vars_init.gms
     5      326 INCLUDE        1      16  .C:\Users\NIME\Documents\water_treatment\minlp_eqns.gms
     6      435 GDXOUT         1      30  C:\Users\NIME\Documents\water_treatment\minlp_main.gdx


COMPILATION TIME     =        0.047 SECONDS      3 Mb  WEX239-239 Nov  9, 2012
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 13
minlp_eqns
E x e c u t i o n


----    195 PARAMETER Bound_up             =      625.000  upper bound for stream flow rates
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 14
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


---- eq17  =E=  

eq17(o)..  - 1990*F_s(pw) + 10*F_s(muw) + ML_rem_c(o) =E= 0 ; (LHS = -945250, INFES = 945250 ****)
     
eq17(s)..  - 200*F_s(pw) + 135*F_s(muw) + ML_rem_c(s) =E= 0 ; (LHS = -95000, INFES = 95000 ****)
     
eq17(th)..  - 19*F_s(pw) - 244*F_s(muw) + ML_rem_c(th) =E= 0 ; (LHS = -9025, INFES = 9025 ****)
     
REMAINING ENTRY SKIPPED


---- eq4  =E=  

eq4..  F_s(pw) + F_s(muw) + F_s(bbd) =E= 625 ; (LHS = 475, INFES = 150 ****)
     

---- eq5  =E=  

eq5(pw)..  F_s(pw) - F_s_tu(pw,st) - F_s_tu(pw,igf) - F_s_tu(pw,orf) - F_s_tu(pw,hcy) - F_s_tu(pw,ls) - F_s_tu(pw,evap) - F_s_tu(pw,wac) =E= 0 ; (LHS = 475, INFES = 475 ****)
     
eq5(muw)..  F_s(muw) - F_s_tu(muw,st) - F_s_tu(muw,igf) - F_s_tu(muw,orf) - F_s_tu(muw,hcy) - F_s_tu(muw,ls) - F_s_tu(muw,evap) - F_s_tu(muw,wac) =E= 0 ; (LHS = 0)
     
eq5(bbd)..  F_s(bbd) - F_s_tu(bbd,st) - F_s_tu(bbd,igf) - F_s_tu(bbd,orf) - F_s_tu(bbd,hcy) - F_s_tu(bbd,ls) - F_s_tu(bbd,evap) - F_s_tu(bbd,wac) =E= 0 ; (LHS = 0)
     

---- eq21  =L=  

eq21(pw,st)..  F_s_tu(pw,st) - 625*B_s_tu(pw,st) =L= 0 ; (LHS = 0)
     
eq21(pw,igf)..  F_s_tu(pw,igf) - 625*B_s_tu(pw,igf) =L= 0 ; (LHS = 0)
     
eq21(pw,orf)..  F_s_tu(pw,orf) - 625*B_s_tu(pw,orf) =L= 0 ; (LHS = 0)
     
REMAINING 18 ENTRIES SKIPPED


---- eq25  =G=  

eq25(pw,st)..  F_s_tu(pw,st) - 20*B_s_tu(pw,st) =G= 0 ; (LHS = 0)
     
eq25(pw,igf)..  F_s_tu(pw,igf) - 20*B_s_tu(pw,igf) =G= 0 ; (LHS = 0)
     
eq25(pw,orf)..  F_s_tu(pw,orf) - 20*B_s_tu(pw,orf) =G= 0 ; (LHS = 0)
     
REMAINING 18 ENTRIES SKIPPED


---- eq6  =E=  

eq6(st)..  F_s_tu(pw,st) + F_s_tu(muw,st) + F_s_tu(bbd,st) + F_rec(st,st) + F_rec(igf,st) + F_rec(orf,st) + F_rec(hcy,st) + F_rec(ls,st) + F_rec(evap,st) + F_rec(wac,st) - F_in(st) =E= 0 ; (LHS = 0)
     
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 15
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


     eq6  =E=  

eq6(igf)..  F_s_tu(pw,igf) + F_s_tu(muw,igf) + F_s_tu(bbd,igf) + F_rec(st,igf) + F_rec(igf,igf) + F_rec(orf,igf) + F_rec(hcy,igf) + F_rec(ls,igf) + F_rec(evap,igf) + F_rec(wac,igf) - F_in(igf) =E= 0 ; (LHS = 0)
     
eq6(orf)..  F_s_tu(pw,orf) + F_s_tu(muw,orf) + F_s_tu(bbd,orf) + F_rec(st,orf) + F_rec(igf,orf) + F_rec(orf,orf) + F_rec(hcy,orf) + F_rec(ls,orf) + F_rec(evap,orf) + F_rec(wac,orf) - F_in(orf) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq24  =L=  

eq24(st)..  F_in(st) - 1250*B_tu(st) =L= 0 ; (LHS = 0)
     
eq24(igf)..  F_in(igf) - 1250*B_tu(igf) =L= 0 ; (LHS = 0)
     
eq24(orf)..  F_in(orf) - 1250*B_tu(orf) =L= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq28  =G=  

eq28(st)..  F_in(st) - 20*B_tu(st) =G= 0 ; (LHS = 0)
     
eq28(igf)..  F_in(igf) - 20*B_tu(igf) =G= 0 ; (LHS = 0)
     
eq28(orf)..  F_in(orf) - 20*B_tu(orf) =G= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq9  =E=  

eq9(st)..  F_in(st) - F_out(st) =E= 0 ; (LHS = 0)
     
eq9(igf)..  F_in(igf) - F_out(igf) =E= 0 ; (LHS = 0)
     
eq9(orf)..  F_in(orf) - F_out(orf) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq12  =E=  

eq12(st,o)..  2000*F_s_tu(pw,st) + 10*F_s_tu(bbd,st) + (0)*F_rec(st,st) + (0)*F_rec(igf,st) + (0)*F_rec(orf,st) + (0)*F_rec(hcy,st) + (0)*F_rec(ls,st) + (0)*F_rec(evap,st) + (0)*F_rec(wac,st) + (0)*C_out(st,o) + (0)*C_out(igf,o) + (0)*C_out(orf,o)
     
      + (0)*C_out(hcy,o) + (0)*C_out(ls,o) + (0)*C_out(evap,o) + (0)*C_out(wac,o) - ML_in(st,o) =E= 0 ; (LHS = 0)
     
eq12(st,s)..  350*F_s_tu(pw,st) + 15*F_s_tu(muw,st) + 150*F_s_tu(bbd,st) + (0)*F_rec(st,st) + (0)*F_rec(igf,st) + (0)*F_rec(orf,st) + (0)*F_rec(hcy,st) + (0)*F_rec(ls,st) + (0)*F_rec(evap,st) + (0)*F_rec(wac,st) + (0)*C_out(st,s) + (0)*C_out(igf,s)
     
      + (0)*C_out(orf,s) + (0)*C_out(hcy,s) + (0)*C_out(ls,s) + (0)*C_out(evap,s) + (0)*C_out(wac,s) - ML_in(st,s) =E= 0 ; (LHS = 0)
     
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 16
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


     eq12  =E=  

eq12(st,th)..  20*F_s_tu(pw,st) + 245*F_s_tu(muw,st) + F_s_tu(bbd,st) + (0)*F_rec(st,st) + (0)*F_rec(igf,st) + (0)*F_rec(orf,st) + (0)*F_rec(hcy,st) + (0)*F_rec(ls,st) + (0)*F_rec(evap,st) + (0)*F_rec(wac,st) + (0)*C_out(st,th) + (0)*C_out(igf,th)
     
      + (0)*C_out(orf,th) + (0)*C_out(hcy,th) + (0)*C_out(ls,th) + (0)*C_out(evap,th) + (0)*C_out(wac,th) - ML_in(st,th) =E= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- eq13  =E=  

eq13(st,o)..  (0)*F_rec(st,st) + (0)*F_rec(st,igf) + (0)*F_rec(st,orf) + (0)*F_rec(st,hcy) + (0)*F_rec(st,ls) + (0)*F_rec(st,evap) + (0)*F_rec(st,wac) + (0)*F_exit(st) + (0)*C_out(st,o) - ML_out(st,o) =E= 0 ; (LHS = 0)
     
eq13(st,s)..  (0)*F_rec(st,st) + (0)*F_rec(st,igf) + (0)*F_rec(st,orf) + (0)*F_rec(st,hcy) + (0)*F_rec(st,ls) + (0)*F_rec(st,evap) + (0)*F_rec(st,wac) + (0)*F_exit(st) + (0)*C_out(st,s) - ML_out(st,s) =E= 0 ; (LHS = 0)
     
eq13(st,th)..  (0)*F_rec(st,st) + (0)*F_rec(st,igf) + (0)*F_rec(st,orf) + (0)*F_rec(st,hcy) + (0)*F_rec(st,ls) + (0)*F_rec(st,evap) + (0)*F_rec(st,wac) + (0)*F_exit(st) + (0)*C_out(st,th) - ML_out(st,th) =E= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- eq10  =E=  

eq10(st,o)..  0.1*ML_in(st,o) - ML_out(st,o) =E= 0 ; (LHS = 0)
     
eq10(st,s)..  ML_in(st,s) - ML_out(st,s) =E= 0 ; (LHS = 0)
     
eq10(st,th)..  ML_in(st,th) - ML_out(st,th) =E= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- eq14  =L=  

eq14(st,o)..  - 2500*F_in(st) + ML_in(st,o) =L= 0 ; (LHS = 0)
     
eq14(st,s)..  - 400*F_in(st) + ML_in(st,s) =L= 0 ; (LHS = 0)
     
eq14(st,th)..  - 400*F_in(st) + ML_in(st,th) =L= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- eq7  =E=  

eq7(st)..  - F_rec(st,st) - F_rec(st,igf) - F_rec(st,orf) - F_rec(st,hcy) - F_rec(st,ls) - F_rec(st,evap) - F_rec(st,wac) - F_exit(st) + F_out(st) =E= 0 ; (LHS = 0)
     
eq7(igf)..  - F_rec(igf,st) - F_rec(igf,igf) - F_rec(igf,orf) - F_rec(igf,hcy) - F_rec(igf,ls) - F_rec(igf,evap) - F_rec(igf,wac) - F_exit(igf) + F_out(igf) =E= 0 ; (LHS = 0)
     
eq7(orf)..  - F_rec(orf,st) - F_rec(orf,igf) - F_rec(orf,orf) - F_rec(orf,hcy) - F_rec(orf,ls) - F_rec(orf,evap) - F_rec(orf,wac) - F_exit(orf) + F_out(orf) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED

GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 17
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


---- eq19  =L=  

eq19(st,igf)..  B_tu_tup(st,igf) + B_tu_tup(igf,st) =L= 1 ; (LHS = 0)
     
eq19(st,orf)..  B_tu_tup(st,orf) + B_tu_tup(orf,st) =L= 1 ; (LHS = 0)
     
eq19(st,hcy)..  B_tu_tup(st,hcy) + B_tu_tup(hcy,st) =L= 1 ; (LHS = 0)
     
REMAINING 39 ENTRIES SKIPPED


---- eq29  =L=  

eq29(st)..  B_s_tu(pw,st) + B_s_tu(muw,st) + B_s_tu(bbd,st) + B_tu_tup(st,st) + B_tu_tup(st,igf) + B_tu_tup(st,orf) + B_tu_tup(st,hcy) + B_tu_tup(st,ls) + B_tu_tup(st,evap) + B_tu_tup(st,wac) =L= 5 ; (LHS = 0)
     
eq29(igf)..  B_s_tu(pw,igf) + B_s_tu(muw,igf) + B_s_tu(bbd,igf) + B_tu_tup(igf,st) + B_tu_tup(igf,igf) + B_tu_tup(igf,orf) + B_tu_tup(igf,hcy) + B_tu_tup(igf,ls) + B_tu_tup(igf,evap) + B_tu_tup(igf,wac) =L= 5 ; (LHS = 0)
     
eq29(orf)..  B_s_tu(pw,orf) + B_s_tu(muw,orf) + B_s_tu(bbd,orf) + B_tu_tup(orf,st) + B_tu_tup(orf,igf) + B_tu_tup(orf,orf) + B_tu_tup(orf,hcy) + B_tu_tup(orf,ls) + B_tu_tup(orf,evap) + B_tu_tup(orf,wac) =L= 5 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq22  =L=  

eq22(st,st)..  F_rec(st,st) - 625*B_tu_tup(st,st) =L= 0 ; (LHS = 0)
     
eq22(st,igf)..  F_rec(st,igf) - 625*B_tu_tup(st,igf) =L= 0 ; (LHS = 0)
     
eq22(st,orf)..  F_rec(st,orf) - 625*B_tu_tup(st,orf) =L= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- eq26  =G=  

eq26(st,st)..  F_rec(st,st) - 20*B_tu_tup(st,st) =G= 0 ; (LHS = 0)
     
eq26(st,igf)..  F_rec(st,igf) - 20*B_tu_tup(st,igf) =G= 0 ; (LHS = 0)
     
eq26(st,orf)..  F_rec(st,orf) - 20*B_tu_tup(st,orf) =G= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- eq8  =E=  

eq8..  F_exit(st) + F_exit(igf) + F_exit(orf) + F_exit(hcy) + F_exit(ls) + F_exit(evap) + F_exit(wac) =E= 625 ; (LHS = 0, INFES = 625 ****)
     
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 18
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


---- eqX  =E=  

eqX(o)..  (0)*F_exit(st) + (0)*F_exit(igf) + (0)*F_exit(orf) + (0)*F_exit(hcy) + (0)*F_exit(ls) + (0)*F_exit(evap) + (0)*F_exit(wac) + (0)*C_out(st,o) + (0)*C_out(igf,o) + (0)*C_out(orf,o) + (0)*C_out(hcy,o) + (0)*C_out(ls,o) + (0)*C_out(evap,o)
     
      + (0)*C_out(wac,o) - 625*C_BFW(o) =E= 0 ; (LHS = 0)
     
eqX(s)..  (0)*F_exit(st) + (0)*F_exit(igf) + (0)*F_exit(orf) + (0)*F_exit(hcy) + (0)*F_exit(ls) + (0)*F_exit(evap) + (0)*F_exit(wac) + (0)*C_out(st,s) + (0)*C_out(igf,s) + (0)*C_out(orf,s) + (0)*C_out(hcy,s) + (0)*C_out(ls,s) + (0)*C_out(evap,s)
     
      + (0)*C_out(wac,s) - 625*C_BFW(s) =E= 0 ; (LHS = 0)
     
eqX(th)..  (0)*F_exit(st) + (0)*F_exit(igf) + (0)*F_exit(orf) + (0)*F_exit(hcy) + (0)*F_exit(ls) + (0)*F_exit(evap) + (0)*F_exit(wac) + (0)*C_out(st,th) + (0)*C_out(igf,th) + (0)*C_out(orf,th) + (0)*C_out(hcy,th) + (0)*C_out(ls,th) + (0)*C_out(evap,th)
     
      + (0)*C_out(wac,th) - 625*C_BFW(th) =E= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED


---- eq23  =L=  

eq23(st)..  F_exit(st) - 625*B_exit(st) =L= 0 ; (LHS = 0)
     
eq23(igf)..  F_exit(igf) - 625*B_exit(igf) =L= 0 ; (LHS = 0)
     
eq23(orf)..  F_exit(orf) - 625*B_exit(orf) =L= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq27  =G=  

eq27(st)..  F_exit(st) - 20*B_exit(st) =G= 0 ; (LHS = 0)
     
eq27(igf)..  F_exit(igf) - 20*B_exit(igf) =G= 0 ; (LHS = 0)
     
eq27(orf)..  F_exit(orf) - 20*B_exit(orf) =G= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq15  =L=  

eq15(o)..  - 10*F_exit(st) - 10*F_exit(igf) - 10*F_exit(orf) - 10*F_exit(hcy) - 10*F_exit(ls) - 10*F_exit(evap) - 10*F_exit(wac) + 625*C_BFW(o) =L= 0 ; (LHS = 0)
     
eq15(s)..  - 150*F_exit(st) - 150*F_exit(igf) - 150*F_exit(orf) - 150*F_exit(hcy) - 150*F_exit(ls) - 150*F_exit(evap) - 150*F_exit(wac) + 625*C_BFW(s) =L= 0 ; (LHS = 0)
     
eq15(th)..  - F_exit(st) - F_exit(igf) - F_exit(orf) - F_exit(hcy) - F_exit(ls) - F_exit(evap) - F_exit(wac) + 625*C_BFW(th) =L= 0 ; (LHS = 0)
     
REMAINING ENTRY SKIPPED

GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 19
minlp_eqns
Equation Listing    SOLVE water Using MINLP From line 432


---- eq18  =E=  

eq18(st)..  - 3098.76*F_in(st) + Cost_tot_tu(st) =E= 0 ; (LHS = 0)
     
eq18(igf)..  - 2339.64*F_in(igf) + Cost_tot_tu(igf) - 35877*B_tu(igf) =E= 0 ; (LHS = 0)
     
eq18(orf)..  - 1248.9*F_in(orf) + Cost_tot_tu(orf) + 401.99*B_tu(orf) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- eq2  =E=  

eq2..  - 13231.98*F_s(muw) - Cost_tot_tu(st) - Cost_tot_tu(igf) - Cost_tot_tu(orf) - Cost_tot_tu(hcy) - Cost_tot_tu(ls) - Cost_tot_tu(evap) - Cost_tot_tu(wac) + Cost_tot =E= 0 ; (LHS = 0)
     

---- objective  =E=  

objective..  - Cost_tot + obj =E= 0 ; (LHS = 0)
     
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 20
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


---- F_s  flow rate of source water

F_s(pw)
                (.LO, .L, .UP, .M = 475, 475, 475, 0)
    -1990       eq17(o)
     -200       eq17(s)
      -19       eq17(th)
      -49       eq17(tss)
        1       eq4
        1       eq5(pw)

F_s(muw)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       10       eq17(o)
      135       eq17(s)
     -244       eq17(th)
        1       eq17(tss)
        1       eq4
        1       eq5(muw)
   -13231.98    eq2

F_s(bbd)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       eq4
        1       eq5(bbd)


---- F_s_tu  flow rate of s entering tu

F_s_tu(pw,st)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq5(pw)
        1       eq21(pw,st)
        1       eq25(pw,st)
        1       eq6(st)
     2000       eq12(st,o)
      350       eq12(st,s)
       20       eq12(st,th)
       50       eq12(st,tss)

F_s_tu(pw,igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq5(pw)
        1       eq21(pw,igf)
        1       eq25(pw,igf)
        1       eq6(igf)
     2000       eq12(igf,o)
      350       eq12(igf,s)
       20       eq12(igf,th)
       50       eq12(igf,tss)

F_s_tu(pw,orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 21
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     F_s_tu  flow rate of s entering tu

       -1       eq5(pw)
        1       eq21(pw,orf)
        1       eq25(pw,orf)
        1       eq6(orf)
     2000       eq12(orf,o)
      350       eq12(orf,s)
       20       eq12(orf,th)
       50       eq12(orf,tss)

REMAINING 18 ENTRIES SKIPPED

---- F_rec  flow rate of streams exiting tu that enter tup for recycle

F_rec(st,st)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       eq6(st)
       (0)      eq12(st,o)
       (0)      eq12(st,s)
       (0)      eq12(st,th)
       (0)      eq12(st,tss)
       (0)      eq13(st,o)
       (0)      eq13(st,s)
       (0)      eq13(st,th)
       (0)      eq13(st,tss)
       -1       eq7(st)
        1       eq22(st,st)
        1       eq26(st,st)

F_rec(st,igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq6(igf)
       (0)      eq12(igf,o)
       (0)      eq12(igf,s)
       (0)      eq12(igf,th)
       (0)      eq12(igf,tss)
       (0)      eq13(st,o)
       (0)      eq13(st,s)
       (0)      eq13(st,th)
       (0)      eq13(st,tss)
       -1       eq7(st)
        1       eq22(st,igf)
        1       eq26(st,igf)

F_rec(st,orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq6(orf)
       (0)      eq12(orf,o)
       (0)      eq12(orf,s)
       (0)      eq12(orf,th)
       (0)      eq12(orf,tss)
       (0)      eq13(st,o)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 22
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     F_rec  flow rate of streams exiting tu that enter tup for recycle

       (0)      eq13(st,s)
       (0)      eq13(st,th)
       (0)      eq13(st,tss)
       -1       eq7(st)
        1       eq22(st,orf)
        1       eq26(st,orf)

REMAINING 46 ENTRIES SKIPPED

---- F_exit  flow rate of streams leaving tu to the discharge point

F_exit(st)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      eq13(st,o)
       (0)      eq13(st,s)
       (0)      eq13(st,th)
       (0)      eq13(st,tss)
       -1       eq7(st)
        1       eq8
       (0)      eqX(o)
       (0)      eqX(s)
       (0)      eqX(th)
       (0)      eqX(tss)
        1       eq23(st)
        1       eq27(st)
      -10       eq15(o)
     -150       eq15(s)
       -1       eq15(th)
       -1       eq15(tss)

F_exit(igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      eq13(igf,o)
       (0)      eq13(igf,s)
       (0)      eq13(igf,th)
       (0)      eq13(igf,tss)
       -1       eq7(igf)
        1       eq8
       (0)      eqX(o)
       (0)      eqX(s)
       (0)      eqX(th)
       (0)      eqX(tss)
        1       eq23(igf)
        1       eq27(igf)
      -10       eq15(o)
     -150       eq15(s)
       -1       eq15(th)
       -1       eq15(tss)

F_exit(orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 23
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     F_exit  flow rate of streams leaving tu to the discharge point

       (0)      eq13(orf,o)
       (0)      eq13(orf,s)
       (0)      eq13(orf,th)
       (0)      eq13(orf,tss)
       -1       eq7(orf)
        1       eq8
       (0)      eqX(o)
       (0)      eqX(s)
       (0)      eqX(th)
       (0)      eqX(tss)
        1       eq23(orf)
        1       eq27(orf)
      -10       eq15(o)
     -150       eq15(s)
       -1       eq15(th)
       -1       eq15(tss)

REMAINING 4 ENTRIES SKIPPED

---- F_in  flow rate of streams entering tu

F_in(st)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq6(st)
        1       eq24(st)
        1       eq28(st)
        1       eq9(st)
    -2500       eq14(st,o)
     -400       eq14(st,s)
     -400       eq14(st,th)
     -100       eq14(st,tss)
    -3098.76    eq18(st)

F_in(igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq6(igf)
        1       eq24(igf)
        1       eq28(igf)
        1       eq9(igf)
    -2500       eq14(igf,o)
     -400       eq14(igf,s)
     -400       eq14(igf,th)
     -100       eq14(igf,tss)
    -2339.64    eq18(igf)

F_in(orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq6(orf)
        1       eq24(orf)
        1       eq28(orf)
        1       eq9(orf)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 24
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     F_in  flow rate of streams entering tu

    -2500       eq14(orf,o)
     -400       eq14(orf,s)
     -400       eq14(orf,th)
     -100       eq14(orf,tss)
    -1248.9     eq18(orf)

REMAINING 4 ENTRIES SKIPPED

---- F_out  flow rate of streams directly exiting tu

F_out(st)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq9(st)
        1       eq7(st)

F_out(igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq9(igf)
        1       eq7(igf)

F_out(orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq9(orf)
        1       eq7(orf)

REMAINING 4 ENTRIES SKIPPED

---- C_out  concentration of stream directly exiting tu

C_out(st,o)
                (.LO, .L, .UP, .M = 0, 0, 2000, 0)
       (0)      eq12(st,o)
       (0)      eq12(igf,o)
       (0)      eq12(orf,o)
       (0)      eq12(hcy,o)
       (0)      eq12(ls,o)
       (0)      eq12(evap,o)
       (0)      eq12(wac,o)
       (0)      eq13(st,o)
       (0)      eqX(o)

C_out(st,s)
                (.LO, .L, .UP, .M = 0, 0, 350, 0)
       (0)      eq12(st,s)
       (0)      eq12(igf,s)
       (0)      eq12(orf,s)
       (0)      eq12(hcy,s)
       (0)      eq12(ls,s)
       (0)      eq12(evap,s)
       (0)      eq12(wac,s)
       (0)      eq13(st,s)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 25
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     C_out  concentration of stream directly exiting tu

       (0)      eqX(s)

C_out(st,th)
                (.LO, .L, .UP, .M = 0, 0, 245, 0)
       (0)      eq12(st,th)
       (0)      eq12(igf,th)
       (0)      eq12(orf,th)
       (0)      eq12(hcy,th)
       (0)      eq12(ls,th)
       (0)      eq12(evap,th)
       (0)      eq12(wac,th)
       (0)      eq13(st,th)
       (0)      eqX(th)

REMAINING 25 ENTRIES SKIPPED

---- C_BFW  concentration of c in BFW

C_BFW(o)
                (.LO, .L, .UP, .M = 0, 0, 2000, 0)
     -625       eqX(o)
      625       eq15(o)

C_BFW(s)
                (.LO, .L, .UP, .M = 0, 0, 350, 0)
     -625       eqX(s)
      625       eq15(s)

C_BFW(th)
                (.LO, .L, .UP, .M = 0, 0, 245, 0)
     -625       eqX(th)
      625       eq15(th)

REMAINING ENTRY SKIPPED

---- ML_in  mass load of c entering tu

ML_in(st,o)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq12(st,o)
        0.1     eq10(st,o)
        1       eq14(st,o)

ML_in(st,s)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq12(st,s)
        1       eq10(st,s)
        1       eq14(st,s)

ML_in(st,th)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 26
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     ML_in  mass load of c entering tu

       -1       eq12(st,th)
        1       eq10(st,th)
        1       eq14(st,th)

REMAINING 25 ENTRIES SKIPPED

---- ML_out  mass load of c exiting tu

ML_out(st,o)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq13(st,o)
       -1       eq10(st,o)

ML_out(st,s)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq13(st,s)
       -1       eq10(st,s)

ML_out(st,th)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       eq13(st,th)
       -1       eq10(st,th)

REMAINING 25 ENTRIES SKIPPED

---- ML_rem_c  mass load of c removed from system

ML_rem_c(o)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq17(o)

ML_rem_c(s)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq17(s)

ML_rem_c(th)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq17(th)

REMAINING ENTRY SKIPPED

---- Cost_tot_tu  total cost of tu

Cost_tot_tu(st)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq18(st)
       -1       eq2

Cost_tot_tu(igf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq18(igf)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 27
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     Cost_tot_tu  total cost of tu

       -1       eq2

Cost_tot_tu(orf)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq18(orf)
       -1       eq2

REMAINING 4 ENTRIES SKIPPED

---- Cost_tot  total capital cost of the system

Cost_tot
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       eq2
       -1       objective


---- B_s_tu  binary variable to show the existence of stream s into tu

B_s_tu(pw,st)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq21(pw,st)
      -20       eq25(pw,st)
        1       eq29(st)

B_s_tu(pw,igf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq21(pw,igf)
      -20       eq25(pw,igf)
        1       eq29(igf)

B_s_tu(pw,orf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq21(pw,orf)
      -20       eq25(pw,orf)
        1       eq29(orf)

REMAINING 18 ENTRIES SKIPPED

---- B_tu_tup  binary variable to show the existence of tu into tup recylce

B_tu_tup(st,st)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       eq29(st)
     -625       eq22(st,st)
      -20       eq26(st,st)

B_tu_tup(st,igf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       eq19(st,igf)
        1       eq19(igf,st)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 28
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     B_tu_tup  binary variable to show the existence of tu into tup recylce

        1       eq29(st)
     -625       eq22(st,igf)
      -20       eq26(st,igf)

B_tu_tup(st,orf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       eq19(st,orf)
        1       eq19(orf,st)
        1       eq29(st)
     -625       eq22(st,orf)
      -20       eq26(st,orf)

REMAINING 46 ENTRIES SKIPPED

---- B_exit  binary variable to show the existence of stream from tu to discharge

B_exit(st)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq23(st)
      -20       eq27(st)

B_exit(igf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq23(igf)
      -20       eq27(igf)

B_exit(orf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
     -625       eq23(orf)
      -20       eq27(orf)

REMAINING 4 ENTRIES SKIPPED

---- B_tu  binary variable to show the existence of tu

B_tu(st)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    -1250       eq24(st)
      -20       eq28(st)

B_tu(igf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    -1250       eq24(igf)
      -20       eq28(igf)
   -35877       eq18(igf)

B_tu(orf)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
    -1250       eq24(orf)
      -20       eq28(orf)
      401.99    eq18(orf)
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 29
minlp_eqns
Column Listing      SOLVE water Using MINLP From line 432


     B_tu  binary variable to show the existence of tu


REMAINING 4 ENTRIES SKIPPED

---- obj  objective variable

obj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective

GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 30
minlp_eqns
Model Statistics    SOLVE water Using MINLP From line 432


MODEL STATISTICS

BLOCKS OF EQUATIONS          26     SINGLE EQUATIONS          376
BLOCKS OF VARIABLES          18     SINGLE VARIABLES          279
NON ZERO ELEMENTS         1,695     NON LINEAR N-Z            700
DERIVATIVE POOL              10     CONSTANT POOL              16
CODE LENGTH               1,040     DISCRETE VARIABLES         84


GENERATION TIME      =        0.109 SECONDS      4 Mb  WEX239-239 Nov  9, 2012


EXECUTION TIME       =        0.109 SECONDS      4 Mb  WEX239-239 Nov  9, 2012
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 31
minlp_eqns
Solution Report     SOLVE water Using MINLP From line 432


               S O L V E      S U M M A R Y

     MODEL   water               OBJECTIVE  obj
     TYPE    MINLP               DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  432

**** SOLVER STATUS     10 Solver Failure           
**** MODEL STATUS      12 Error Unknown            
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT        308.890     86400.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       Jul  4, 2012 23.9.5 WEX 36376.36401 WEI x86_64/MS Windows    

Branch And Reduce Optimization Navigator
Nikolaos Sahinidis and Mohit Tawarmalani
The Optimization Firm, LLC.


No solution returned
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 32
minlp_eqns
Solution Report     SOLVE water Using MINLP From line 432


**** SOLVER STATUS FILE LISTED BELOW
=0GAMS/BARON       Jul  4, 2012 23.9.5 WEX 36376.36401 WEI x86_64/MS Windows    
=C
=CGAMS/BARON       Jul  4, 2012 23.9.5 WEX 36376.36401 WEI x86_64/MS Windows    
=C
=CBranch And Reduce Optimization Navigator
=CNikolaos Sahinidis and Mohit Tawarmalani
=CThe Optimization Firm, LLC.
=C
 C:\Users\NIME\Documents\water_treatment\225a\sum.dat    =    problem   375   278  3155   537  0.548823110596D+07  0.980511355868D+07        6       4       0    1088       8     622   308.89     0.03    54.42   309.00    10.34    52.44     1.23     0.00 
 skip       = 278
 skip       = 3155
 skip       = 537
 zlbest     = 5488231.10596
 zub        = 0
 barstatus  = 6
 modelstatus= 4
 missingbnd = 0
 itera      = 1088
 nodeopt    = 8
 nodememmax = 622
 totaltime  = 308.89
 parsertime = 0.03
 retime     = 54.42
 navitime   = 309
 reltime    = 10.34
 loctime    = 52.44
 margtime   = 1.23
 probtime   = 0
=9_
=2
===========================================================================
 BARON version 11.5.2. Built: WIN-64 Mon Oct 22 23:20:37 EDT 2012

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
=2
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP:  ILOG CPLEX                                      
 For NLP: MINOS, GAMS external NLP solver, COIN IPOPT with MUMPS and METIS
=2
===========================================================================
    The options used in solving the problem are as follows:
       maxtime        =  0.8640E+05
       maxiter        =      -1
       numsol         =       1
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 33
minlp_eqns
Solution Report     SOLVE water Using MINLP From line 432


       firstfeas      =      -1
       cutoff         =  0.1000E+52
       epsa           =  0.1000E-08
       epsr           =  0.1000E-01
       contol         =  0.1000E-04
       boxtol         =  0.1000E-04
       isoltol        =  0.1000E-03
       inttol         =  0.1000E-05
       results        =       1
       summary        =       1
       times          =       1
       prtimefreq     =  0.3000E+02
       prfreq         = 1000000
       prlevel        =       1
       numprint       =     278
       numprintdual   =      -1
       bpint          =  0.1000E+01
       lpsol          =       3
       nlpsol         =      -1
       numloc         =      20
       locres         =       0
=2
===========================================================================
 Doing local search
 Solving bounding LP
 Starting preprocessing LPs
 Done with preprocessing LPs
 Starting multi-start local search
 Done with local search
=2
===========================================================================
 We have space for 24104 nodes in the tree (in 96 MB memory)
=2
===========================================================================
  Iteration    Open nodes       Total time     Lower bound      Upper bound
          1             1        000:00:54    0.431712D+07     0.896018D+08
          1             1        000:00:56    0.513308D+07     0.896018D+08
*         8             5        000:01:09    0.520503D+07     0.980511D+07
        110+           71        000:01:39    0.532305D+07     0.980511D+07
        233+          137        000:02:09    0.536537D+07     0.980511D+07
        366+          214        000:02:39    0.539478D+07     0.980511D+07
        526+          309        000:03:09    0.542665D+07     0.980511D+07
        660+          383        000:03:39    0.544571D+07     0.980511D+07
        825           475        000:04:09    0.546828D+07     0.980511D+07
        957           548        000:04:39    0.547523D+07     0.980511D+07
       1088+          622        000:05:09    0.548823D+07     0.980511D+07
=9=
 reset missingbounds to 0
=C
=C===========================================================================
=C BARON version 11.5.2. Built: WIN-64 Mon Oct 22 23:20:37 EDT 2012
=C
=C If you use this software, please cite:
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 34
minlp_eqns
Solution Report     SOLVE water Using MINLP From line 432


=C Tawarmalani, M. and N. V. Sahinidis, A polyhedral
=C branch-and-cut approach to global optimization,
=C Mathematical Programming, 103(2), 225-249, 2005.
=C
=C BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=C Parts of the BARON software were created at the

=C*** no solution found in file C:\Users\NIME\Documents\water_treatment\225a\res.dat
**** SOLVER STATUS FILE LISTED ABOVE
GAMS Rev 239  WEX-WEI 23.9.5 x86_64/MS Windows                                                                                                                                                                                        10/25/17 13:45:22 Page 35
minlp_eqns
E x e c u t i o n


EXECUTION TIME       =        0.016 SECONDS      3 Mb  WEX239-239 Nov  9, 2012


USER: Dept of Chemical Engineering                   G120809:1617AA-GEN
      Princeton University                                       DC9841
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\NIME\Documents\water_treatment\minlp_main.gms
Output     C:\Users\NIME\Documents\water_treatment\minlp_main.lst
